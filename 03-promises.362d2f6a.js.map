{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,kBAASC,EAAcC,EAAUC,GACTC,KAAKC,Q,CAyB7B,SAASJ,EAAcC,EAAUC,GAC/B,OAAO,IAAIG,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBL,KAAKC,SAAW,GACxCK,YAAW,KACHD,GACNF,EAAQ,uBAAqBL,QAAiBC,OAE5CK,EAAK,sBAAoBN,QAAeC,MAAU,GACjDA,EAAM,G,CAGb,SAASQ,EAAUC,GACjBb,EAAAc,OAAOC,QAAQF,E,CAGjB,SAASG,EAAWC,GAClBjB,EAAAc,OAAOI,QAAQD,E,CA9BJE,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBACJ,MAAMnB,MAAEA,EAAKoB,KAAEA,EAAIC,OAAEA,GAAWH,EAAII,cAEpC,IAAIC,EAAeC,OAAOxB,EAAMyB,OAElC,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAOI,MAAOC,IAChC5B,EAAc4B,EAAGH,GAAcI,KAAKnB,GAAWoB,MAAMhB,GACxDW,GAAgBC,OAAOJ,EAAKK,M","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget;\n\n  let dalayPromise = Number(delay.value);\n\nfor (let i = 1; i <= amount.value; i++) {\n   createPromise(i, dalayPromise).then(onResolve).catch(onRejected);\ndalayPromise += Number(step.value);\n  }\n}\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n      if (shouldResolve) {\n    resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n    reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\nfunction onResolve(result) {\n  Notify.success(result);\n}\n\nfunction onRejected(error) {\n  Notify.failure(error);\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Math","random","Promise","resolve","reject","shouldResolve","setTimeout","$47d4ff9957288465$var$onResolve","result","Notify","success","$47d4ff9957288465$var$onRejected","error","failure","document","querySelector","addEventListener","evt","preventDefault","step","amount","currentTarget","dalayPromise","Number","value","i","then","catch"],"version":3,"file":"03-promises.362d2f6a.js.map"}